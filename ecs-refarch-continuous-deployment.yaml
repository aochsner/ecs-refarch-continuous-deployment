Description: >
  This template illustrates how to use AWS CodeBuild and AWS CodePipeline to
  achieve continuous deployment of source code from a GitHub repository via a
  Docker container to an Amazon EC2 Container Service cluster.


Parameters:
  GitHubUser:
    Type: String
    Default: mathomas
    Description: Your username on GitHub.

  GitHubRepo:
    Type: String
    Default: twig
    Description: The repo name of the sample service.

  GitHubBranch:
    Type: String
    Default: aws_metal_rig
    Description: The branch of the repo to continuously deploy.

  GitHubToken:
    Type: String
    Description: >
      Token for the user specified above. (https://github.com/settings/tokens)

  BuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: >
      Size of machine to use for build.  *_MEDIUM and *_LARGE are available if SMALL is not sufficient.

  EcsClusterInstanceType:
    Type: String
    Default: "t2.small"
    Description: >
      Instance type used for ECS cluster.

  EcsClusterMinSize:
    Type: String
    Default: "1"
    Description: >
      Minimum number of instances in ECS cluster.

  EcsClusterMaxSize:
    Type: String
    Default: "2"
    Description: >
      Maximum number of instances in ECS cluster.

  EcsClusterDesiredSize:
    Type: String
    Default: "1"
    Description: >
      Initial number of instances in ECS cluster.

  TemplateBucket:
    Type: String
    Default: "buildit-twig-metal-rig"
    Description: >
      Bucket in S3 where this and the supporting templates for your project were deployed (using ./bin/deploy).

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: "User"
      GitHubRepo:
        default: "Repo"
      GitHubBranch:
        default: "Branch"
      GitHubToken:
        default: "Personal Access Token"
      BuildComputeType:
        default: "Build Machine Size"
      EcsClusterInstanceType:
        default: "Cluster Instance Type"
      EcsClusterMinSize:
        default: "Minimum size of Cluster"
      EcsClusterMaxSize:
        default: "Maximum size of Cluster"
      EcsClusterDesiredSize:
        default: "Initial/desired size of Cluster"
    ParameterGroups:
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken
      - Label:
          default: Build/Deployment Pipeline Configuration
        Parameters:
          - BuildComputeType
      - Label:
          default: ECS Configuration
        Parameters:
          - EcsClusterInstanceType
          - EcsClusterMinSize
          - EcsClusterMaxSize
          - EcsClusterDesiredSize


Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/templates/ecs-cluster.yaml
      Parameters:
        SourceSecurityGroup: !GetAtt Elb.Outputs.SecurityGroup
        Subnets: !GetAtt Vpc.Outputs.PrivateSubnets
        VpcId: !GetAtt Vpc.Outputs.VpcId
        InstanceType: !Ref EcsClusterInstanceType
        MinClusterSize: !Ref EcsClusterMinSize
        MaxClusterSize: !Ref EcsClusterMaxSize
        DesiredClusterSize: !Ref EcsClusterDesiredSize

  Pipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/templates/deployment-pipeline.yaml
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        TargetGroup: !GetAtt Elb.Outputs.TargetGroup
        TemplateBucket: !Sub ${TemplateBucket}
        BuildComputeType: !Ref BuildComputeType

  Elb:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/templates/load-balancer.yaml
      Parameters:
        Subnets: !GetAtt Vpc.Outputs.PublicSubnets
        VpcId: !GetAtt Vpc.Outputs.VpcId

  Vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/templates/vpc.yaml
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        PubSubnet1CIDR: 10.215.10.0/24
        PubSubnet2CIDR: 10.215.20.0/24
        PubSubnet3CIDR: 10.215.30.0/24
        PrivSubnet1CIDR: 10.215.40.0/24
        PrivSubnet2CIDR: 10.215.50.0/24
        PrivSubnet3CIDR: 10.215.60.0/24


Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt Elb.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt Pipeline.Outputs.PipelineUrl
